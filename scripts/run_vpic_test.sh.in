#!/bin/bash

#
# Copyright (c) 2017, Carnegie Mellon University.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

### instant death on misc errors ###
set -euo pipefail

#########################################
# default values for tunable parameters #
#########################################

arg_test_type="baseline"  ## or deltafs, shuffle_test, ...
arg_ip_subnet="10.92"
arg_nodes="1"
arg_procs_per_node="4"
arg_num_vpic_dumps="2"
arg_num_vpic_steps="200"
arg_px="$((arg_nodes * arg_procs_per_node * 4))"
arg_py="$((10**2))"
arg_pz="1"
arg_tx="$((arg_nodes * arg_procs_per_node))"
arg_ty="1"
arg_tz="1"
arg_deckid="trecon-part/turbulence"
arg_bbos_buddies="0"
arg_should_skip_query="0"
arg_should_do_multipass_query="0"
# use an io skeleton program to emulate the io pattern.
# will not build a real vpic input deck.
arg_emu="${VPIC_EMU:-}"
arg_emu_opts="${VPIC_EMU_OPTS:-}"

###############
# Core script #
###############

source @CMAKE_INSTALL_PREFIX@/scripts/common.sh

# load command line args into $arg_* vars (overwrites default values)
loadargs "$@"

# XXX: jam args back into global variables shared with common.sh
ip_subnet="$arg_ip_subnet"
nodes="$arg_nodes"
vpic_epochs="$arg_num_vpic_dumps"
vpic_steps="$arg_num_vpic_steps"
bbos_buddies="$arg_bbos_buddies"

message "Script begin..."
# keep track of start time so we can see how long this takes
timein=`date`

### lustre ###
get_jobdir
### bb ###
get_bbdir
### machine list ###
gen_hosts

### set read path ###
last=$arg_should_do_multipass_query
if [ $arg_should_skip_query -ne 0 ]
then
do_querying=0
else
do_querying=1
fi

cores=$((arg_procs_per_node * nodes))
parts=$((arg_px * arg_py * arg_pz * 100))

### determine vpic input deck ###
case $arg_test_type in
"baseline")
    deck="file-per-process"
    ;;

*)
    deck="file-per-particle"
    ;;

esac

### other options ###
case $arg_test_type in
"shuffle_test")
    export XX_BYPASS_WRITE=1
    ;;

esac

if [ ${XX_BYPASS_WRITE:-0} -ne 0 ]; then
    do_querying=0
fi

# prepare the job input deck or use an io emulator
if [ x"$arg_emu" == x ]; then
    build_deck $deck $arg_deckid $arg_px $arg_py $arg_pz \
        $arg_tx $arg_ty $arg_tz $arg_num_vpic_dumps $arg_num_vpic_steps
    prog="${jobdir}/current-deck.op"
else
    prog="${dfsu_prefix}/bin/${arg_emu} ${arg_emu_opts} $deck $arg_deckid \
        $arg_px $arg_py $arg_pz $arg_tx $arg_ty $arg_tz \
        $arg_num_vpic_dumps $arg_num_vpic_steps"
fi

message ""
message ""

do_run $arg_test_type $parts $arg_procs_per_node "$prog"

# overall time
timeout=`date`

message "Script complete!"
message "start: ${timein}"
message "  end: ${timeout}"

exit 0
