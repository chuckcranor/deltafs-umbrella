#!/bin/bash

### instant death on misc errors ###
set -euo pipefail

######################
# Tunable parameters #
######################

# Notes:
# ------
#
# nodes: Use a power of two to get better particle numbers.
#
# bbos_buddies: An additional number of nodes dedicated for burst buffer
# communication. Should be set to the same number of nodes as the burst buffer
# nodes.

# Node topology
cores_per_node=4
nodes=16
bbos_buddies=0

# DeltaFS config
ip_subnet="10.92"

###############
# Core script #
###############

source @CMAKE_INSTALL_PREFIX@/scripts/common.sh

### lustre ###
get_jobdir
### bb ###
get_bbdir
### machine list ###
gen_hosts

# Notes:
# ------
#
# min_cores and max_cores: we scale the number of cores used by VPIC by starting
# at min_cores and increasing the number exponentially until we reach max_cores,
# which is defined (by default) to be the number of cores in the nodes allocated
# for VPIC through the $nodes variable above.

min_cores=1
max_cores=$((nodes * cores_per_node))

bb_sst_size=$((2 * (2**20)))    # BBOS SST table size in bytes
bb_log_size=$((1024 * (2**20))) # BBOS max per-core log size in bytes

cores=$min_cores
do_querying=1
last=0
while [ $cores -le $max_cores ]
do
    if [ $cores -eq $max_cores ]; then
        last=1
    fi

    px=$((cores * 16))
    py=$((10**4))
    parts=$((px * py * 100))
    bb_clients=$cores

    build_deck "file-per-process" $px $py
    do_run "baseline" $parts $last

    build_deck "file-per-particle" $px $py
    do_run "deltafs" $parts $last

    cores=$(( cores * 2 ))
done
