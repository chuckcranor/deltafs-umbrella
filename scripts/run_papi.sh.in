#!/bin/bash

#
# Copyright (c) 2018, Carnegie Mellon University.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

### instant death on misc errors ###
set -euo pipefail

#########################################
# default values for tunable parameters #
#########################################

arg_ppn="4"
arg_numa_opts="-m all"
arg_papi_opts="-c 8 -n 128 -m 512 -t 1800"
arg_events="PAPI_L1_DCM PAPI_L2_DCM"

source @CMAKE_INSTALL_PREFIX@/scripts/common.sh

# load command line args into $arg_* vars (overwrites default values)
loadargs "$@"

ppn="$arg_ppn"
numa_opts="$arg_numa_opts"
papi_opts="$arg_papi_opts"
events="$arg_events"

message "Script begin..."
# keep track of start time so we can see how long this takes
timein=`date`

papi="${dfsu_prefix}/bin/papi-try"

do_mpirun $ppn $ppn "" "" "numactl $numa_opts -- $papi $papi_opts $events"

# overall time
timeout=`date`
message "Script complete."
message "start: ${timein}"
message "  end: ${timeout}"

exit 0
