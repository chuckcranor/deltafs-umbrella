#
# ci.yml  github actions continuous integration for deltafs-umbrella
# 20-May-2021  chuck@ece.cmu.edu
#

# workflow name.  user defined string that displays on repo's action page.
name: CI

# workflow trigger.  when to run?  'branches' limits scope to given branches.
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# job(s) to run when workflow is triggered.
jobs:

  # first (and only) job for this workflow: buildtest
  buildtest:

    # create a build matrix for this job.   disable fail-fast so we
    # do not fail the whole job if one branch of the matrix fails.
    # you can use "include" to add branches to matrix and "exclude"
    # to prune branches you do not want to build.
    strategy:
      fail-fast: false
      matrix:
        #build_type: [Debug, RelWithDebInfo]
        #compiler: [gcc, clang]
        build_type: [Debug]
        compiler: [gcc-7 gcc-8 gcc-9 gcc-10]
        mpi: [mpich]
        os: [ubuntu-latest]

    # what os to run on (reference matrix above for this)
    runs-on: ${{ matrix.os }}

    # environment variables to provide to the job
    env:
      CI_BUILDTYPE: ${{ matrix.build_type }}
      CI_COMPILER: ${{ matrix.compiler }}
      CI_MPI: ${{ matrix.mpi }}

    # sequential set of steps (i.e. commands) for this job
    steps:
      - name: display selected environment config
        run: echo "build=$CI_BUILDTYPE  compiler=$CI_COMPILER  mpi=$CI_MPI"

      # note: clang includes C++, but g++ is its own package.
      # XXX: run did not like /bin/sh case statement (syntax err, quoting?)
      - name: setup selected environment
        run: |
          sudo apt-get update
          sudo apt-get install -y $CI_COMPILER
          compbase=`echo $CI_COMPILER | sed -e 's/-.*//'`
          if [ "$compbase" = "gcc" ]; then
            cxx=`echo $CI_COMPILER| sed -e 's/^gcc/g++/'`
            sudo apt-get install -y $cxx
          fi
          sudo apt-get install -y $CI_MPI lib${CI_MPI}-dev
          sudo apt-get install -y cmake automake
          sudo apt-get install libibverbs-dev libibverbs-dev
          sudo apt-get install libpapi-dev libnuma-dev

      - name: version check
        run: |
          automake --version
          cmake --version
          git --version

      - name: github checkout source
        uses: actions/checkout@v2

      - name: setup build area
        run: rm -rf /tmp/deltafs && mkdir -p /tmp/deltafs/build

      - name: configure via cmake
        run: |
          compbase=`echo $CI_COMPILER | sed -e 's/-.*//'`
          if [ "$compbase" = "gcc" ]; then
            cxx=`echo $CI_COMPILER| sed -e 's/^gcc/g++/'`
          elif [ "$compbase" = "clang" ]; then
            cxx=`echo $CI_COMPILER| sed -e 's/^clang/clang++/'`
          else
            echo "compbase error $compbase - this cannot happen"
          fi
          srcdir=`pwd`
          cd /tmp/deltafs/build
          cmake -DCMAKE_C_COMPILER="$CI_COMPILER" \
              -DCMAKE_CXX_COMPILER="$cxx" \
              -DMPI_C_COMPILER="mpicc.$CI_MPI" \
              -DMPI_CXX_COMPILER="mpicxx.$CI_MPI" \
              -DCMAKE_INSTALL_PREFIX=/tmp/deltafs \
              -DUMBRELLA_BUILDTESTS=OFF -DUMBRELLA_RUNTESTS=OFF \
              $srcdir

      - name: compile and install
        run: cd /tmp/deltafs/build && make

